{"ast":null,"code":"var _jsxFileName = \"/Users/vinayasharma/Desktop/new-app/src/components/maincontent.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function MainContent() {\n  _s();\n\n  const [meme, setMeme] = React.useState({\n    \"topText\": \"\",\n    \"bottomText\": \"\",\n    \"image\": \"https://i.imgflip.com/1g8my4.jpg\"\n  });\n  const [allMemes, setAllMemes] = React.useState([]);\n  React.useEffect(() => {\n    fetch(\"https://api.imgflip.com/get_memes\").then(resp => resp.json()).then(data => setAllMemes(data.data.memes));\n  }, []);\n\n  function getMemeImage() {\n    let randomNum = Math.floor(Math.random() * allMemes.length);\n    const url = allMemes[randomNum].url;\n    setMeme(prevState => ({ ...prevState,\n      \"image\": url\n    }));\n  }\n\n  function valueChange(event) {\n    setMeme(prevMeme => ({ ...prevMeme,\n      [event.target.name]: event.target.value\n    }));\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"MemeComp\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"get\",\n        name: \"topText\",\n        type: \"text\",\n        placeholder: \"top text\",\n        onChange: valueChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"get\",\n        name: \"bottomText\",\n        type: \"text\",\n        placeholder: \"bottom text\",\n        onChange: valueChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: getMemeImage,\n        className: \"gett\",\n        children: \"Get a new meme image  \\uD83D\\uDDBC\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"topText\",\n      children: meme.topText\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      className: \"meme--image\",\n      src: meme.image\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"bottomText\",\n      children: meme.bottomText\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 12\n  }, this);\n}\n\n_s(MainContent, \"Txdg2L9ysMAA7jjWjQgOW3aqkuY=\");\n\n_c = MainContent;\n\nvar _c;\n\n$RefreshReg$(_c, \"MainContent\");","map":{"version":3,"sources":["/Users/vinayasharma/Desktop/new-app/src/components/maincontent.js"],"names":["React","MainContent","meme","setMeme","useState","allMemes","setAllMemes","useEffect","fetch","then","resp","json","data","memes","getMemeImage","randomNum","Math","floor","random","length","url","prevState","valueChange","event","prevMeme","target","name","value","topText","image","bottomText"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,eAAe,SAASC,WAAT,GAAsB;AAAA;;AACjC,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBH,KAAK,CAACI,QAAN,CACpB;AACI,eAAW,EADf;AAEI,kBAAa,EAFjB;AAGI,aAAS;AAHb,GADoB,CAAxB;AAQA,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BN,KAAK,CAACI,QAAN,CAAe,EAAf,CAAhC;AAEAJ,EAAAA,KAAK,CAACO,SAAN,CAAgB,MAAI;AAChBC,IAAAA,KAAK,CAAC,mCAAD,CAAL,CACKC,IADL,CACWC,IAAI,IAAIA,IAAI,CAACC,IAAL,EADnB,EAEKF,IAFL,CAEWG,IAAI,IAAIN,WAAW,CAACM,IAAI,CAACA,IAAL,CAAUC,KAAX,CAF9B;AAGH,GAJD,EAIG,EAJH;;AAMA,WAASC,YAAT,GAAuB;AACnB,QAAIC,SAAS,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAcb,QAAQ,CAACc,MAAlC,CAAhB;AAEA,UAAMC,GAAG,GAAGf,QAAQ,CAACU,SAAD,CAAR,CAAoBK,GAAhC;AACAjB,IAAAA,OAAO,CAAEkB,SAAS,KAAK,EACnB,GAAGA,SADgB;AAEnB,eAASD;AAFU,KAAL,CAAX,CAAP;AAKH;;AAED,WAASE,WAAT,CAAqBC,KAArB,EAA2B;AACvBpB,IAAAA,OAAO,CAACqB,QAAQ,KAAK,EACjB,GAAGA,QADc;AAEjB,OAACD,KAAK,CAACE,MAAN,CAAaC,IAAd,GAAqBH,KAAK,CAACE,MAAN,CAAaE;AAFjB,KAAL,CAAT,CAAP;AAIH;;AAED,sBAAO;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA,4BACH;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA,8BACI;AAAO,QAAA,SAAS,EAAG,KAAnB;AAAyB,QAAA,IAAI,EAAG,SAAhC;AAA0C,QAAA,IAAI,EAAC,MAA/C;AAAsD,QAAA,WAAW,EAAC,UAAlE;AAA6E,QAAA,QAAQ,EAAIL;AAAzF;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAO,QAAA,SAAS,EAAG,KAAnB;AAAyB,QAAA,IAAI,EAAC,YAA9B;AAA2C,QAAA,IAAI,EAAC,MAAhD;AAAuD,QAAA,WAAW,EAAC,aAAnE;AAAiF,QAAA,QAAQ,EAAEA;AAA3F;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI;AAAQ,QAAA,OAAO,EAAIR,YAAnB;AAAiC,QAAA,SAAS,EAAG,MAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADG,eAMH;AAAI,MAAA,SAAS,EAAC,SAAd;AAAA,gBAAyBZ,IAAI,CAAC0B;AAA9B;AAAA;AAAA;AAAA;AAAA,YANG,eAOH;AAAK,MAAA,SAAS,EAAG,aAAjB;AAA8B,MAAA,GAAG,EAAE1B,IAAI,CAAC2B;AAAxC;AAAA;AAAA;AAAA;AAAA,YAPG,eAQH;AAAI,MAAA,SAAS,EAAC,YAAd;AAAA,gBAA4B3B,IAAI,CAAC4B;AAAjC;AAAA;AAAA;AAAA;AAAA,YARG;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AAUH;;GA7CuB7B,W;;KAAAA,W","sourcesContent":["import React from \"react\"\n\nexport default function MainContent(){\n    const [meme, setMeme] = React.useState(\n        {\n            \"topText\": \"\",\n            \"bottomText\":\"\",\n            \"image\": \"https://i.imgflip.com/1g8my4.jpg\"\n        }\n    )\n    \n    const [allMemes, setAllMemes] = React.useState([])\n\n    React.useEffect(()=>{\n        fetch(\"https://api.imgflip.com/get_memes\")\n            .then (resp => resp.json())\n            .then (data => setAllMemes(data.data.memes))\n    }, [])\n\n    function getMemeImage(){\n        let randomNum = Math.floor(Math.random()*allMemes.length)\n        \n        const url = allMemes[randomNum].url\n        setMeme( prevState => ({\n            ...prevState, \n            \"image\": url\n        }\n    ))\n    }\n\n    function valueChange(event){\n        setMeme(prevMeme => ({\n            ...prevMeme, \n            [event.target.name]: event.target.value\n        }))\n    }\n\n    return(<div className=\"MemeComp\">\n        <div className=\"form\">\n            <input className = \"get\" name = \"topText\" type='text' placeholder=\"top text\" onChange = {valueChange}></input>\n            <input className = \"get\" name=\"bottomText\" type='text' placeholder=\"bottom text\" onChange={valueChange}></input>\n            <button onClick = {getMemeImage} className = \"gett\">Get a new meme image  ðŸ–¼</button>\n        </div>\n        <h1 className=\"topText\">{meme.topText}</h1>\n        <img className = \"meme--image\"src={meme.image}></img>\n        <h1 className=\"bottomText\">{meme.bottomText}</h1>\n    </div>)\n}"]},"metadata":{},"sourceType":"module"}