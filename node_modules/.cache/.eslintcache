[{"/Users/vinayasharma/Desktop/new-app/src/index.js":"1","/Users/vinayasharma/Desktop/new-app/src/components/app.js":"2","/Users/vinayasharma/Desktop/new-app/src/components/nav.js":"3","/Users/vinayasharma/Desktop/new-app/src/components/maincontent.js":"4"},{"size":172,"mtime":1643145668094,"results":"5","hashOfConfig":"6"},{"size":217,"mtime":1643169421660,"results":"7","hashOfConfig":"6"},{"size":267,"mtime":1643168291068,"results":"8","hashOfConfig":"6"},{"size":1576,"mtime":1643297949167,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1r2f2zc",{"filePath":"12","messages":"13","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"15","messages":"16","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"17"},{"filePath":"18","messages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20"},"/Users/vinayasharma/Desktop/new-app/src/index.js",[],"/Users/vinayasharma/Desktop/new-app/src/components/app.js",[],["21","22"],"/Users/vinayasharma/Desktop/new-app/src/components/nav.js",[],["23","24"],"/Users/vinayasharma/Desktop/new-app/src/components/maincontent.js",["25"],"import React from \"react\"\n\nexport default function MainContent(){\n    const [meme, setMeme] = React.useState(\n        {\n            \"topText\": \"\",\n            \"bottomText\":\"\",\n            \"image\": \"https://i.imgflip.com/1g8my4.jpg\"\n        }\n    )\n    \n    const [allMemes, setAllMemes] = React.useState([])\n\n    React.useEffect(()=>{\n        fetch(\"https://api.imgflip.com/get_memes\")\n            .then (resp => resp.json())\n            .then (data => setAllMemes(data.data.memes))\n    }, [])\n\n    function getMemeImage(){\n        let randomNum = Math.floor(Math.random()*allMemes.length)\n        \n        const url = allMemes[randomNum].url\n        setMeme( prevState => ({\n            ...prevState, \n            \"image\": url\n        }\n    ))\n    }\n\n    function valueChange(event){\n        setMeme(prevMeme => ({\n            ...prevMeme, \n            [event.target.name]: event.target.value\n        }))\n    }\n\n    return(<div className=\"MemeComp\">\n        <div className=\"form\">\n            <input className = \"get\" name = \"topText\" type='text' placeholder=\"top text\" onChange = {valueChange}></input>\n            <input className = \"get\" name=\"bottomText\" type='text' placeholder=\"bottom text\" onChange={valueChange}></input>\n            <button onClick = {getMemeImage} className = \"gett\">Get a new meme image  ðŸ–¼</button>\n        </div>\n        <div className=\"Meme\">\n        <img className = \"meme--image\"src={meme.image}></img>\n        <h1 className=\"topText\">{meme.topText}</h1>\n        <h1 className=\"bottomText\">{meme.bottomText}</h1>\n        </div>\n    </div>)\n}",{"ruleId":"26","replacedBy":"27"},{"ruleId":"28","replacedBy":"29"},{"ruleId":"26","replacedBy":"30"},{"ruleId":"28","replacedBy":"31"},{"ruleId":"32","severity":1,"message":"33","line":45,"column":9,"nodeType":"34","endLine":45,"endColumn":56},"no-native-reassign",["35"],"no-negated-in-lhs",["36"],["35"],["36"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]